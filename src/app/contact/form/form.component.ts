import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Platform } from '@ionic/angular';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { EmailComposer } from '@ionic-native/email-composer/ngx';

@Component({
  selector: 'app-form',
  templateUrl: './form.component.html',
  styleUrls: ['./form.component.scss']
})
export class FormComponent implements OnInit {
  formContact: FormGroup;
  submitAttempt = false;
  submitSuccess = false;

  constructor(public formBuilder: FormBuilder,
              public platform: Platform,
              private httpClient: HttpClient,
              private emailComposer: EmailComposer) {
    this.formContact = formBuilder.group({
      name: [''],
      email: ['', Validators.compose([Validators.required, Validators.email, Validators.maxLength(128)])],
      message: ['', Validators.compose([Validators.required])]
    });
  }

  ngOnInit() {}

  onSentViaInternet() {
    if (this.formContact.valid) {
      // console.log('onFormSubmit() success.', this.formContact.value);
      this.sendToBackend(this.formContact.get('name').value, this.formContact.get('email').value, this.formContact.get('message').value);
      this.formContact.patchValue({message: ''});
      this.submitSuccess = true;
      this.submitAttempt = false; // Always reset on success
    } else {
      // console.warn('onFormSubmit() failed.', this.formContact.value);
      this.submitAttempt = true;
    }
  }

  onSentViaEmail() {
    this.sendAsEmail(this.formContact.get('message').value);
  }

  sendToBackend(name: string, email: string, text: string) {
    console.log('sendToBackend()', name, email, text);

    const headers = new HttpHeaders();
    headers.append('Accept', 'application/json');
    headers.append('Content-Type', 'application/json' );

    let os = 'Unknown';
    if (this.platform.is('ios')) { os = 'iOS'; }
    if (this.platform.is('android')) { os = 'Android'; }
    const postData = {
      app: 'Ionic Playground',
      os,
      name,
      email,
      text
    };

    this.httpClient.post('https://karpolan.com/services/gmail', postData, { headers })
      .subscribe((data) => {
        console.log('sendToBackend() success.', data);
       }, (error) => {
        console.warn('sendToBackend() failed. ', error);
      });
  }

  sendAsEmail(text: string) {
    // console.log('sendMessage()', text);

    /*
    this.emailComposer.isAvailable()
      .then((available: boolean) => {
        if (available) {
          console.log('emailComposer is available');
        } else {
          console.warn('emailComposer is not available');
          return false;
        }
      })
      .catch((err) => {
        console.warn('emailComposer failed.', err);
        return false;
      });
    */

    // We should be able to send emails below...
    let os = 'Unknown';
    if (this.platform.is('ios')) { os = 'iOS'; }
    if (this.platform.is('android')) { os = 'Android'; }
    const body = `
${text}
-- 
Email generated by "Ionic Playground" app on ${os} system.`;
    const emailObject = {
      to: 'software@karpolan.com',
      subject: 'From Ionic Playground application',
      body,
      isHtml: false
    };

    // Send a text message using default options
    this.emailComposer.open(emailObject);
    return true;
  }

}
